{"version":3,"file":"bonita-utils.js","sourceRoot":"","sources":["file:///F:/Develpment/AngularWorkOrder/@NgBonita/tmp/broccoli_type_script_compiler-input_base_path-jBV9tdnG.tmp/0/src/app/bonita-utils.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,8BAA6B,iBAAiB,CAAC,CAAA;AAC/C,qBAA+B,eAAe,CAAC,CAAA;AAE/C;;;;;GAKG;AAEH;IAEE;;;;;;OAMG;IACH,qBAAoB,YAA0B,EACpC,IAAU,EAAU,IAAc;QADxB,iBAAY,GAAZ,YAAY,CAAc;QACpC,SAAI,GAAJ,IAAI,CAAM;QAAU,SAAI,GAAJ,IAAI,CAAU;IAAI,CAAC;IAEzC,sCAAgB,GAAxB,UAAyB,IAAI,EAAE,aAAa;QAC1C,IAAI,YAAY,GAAG,aAAa,EAAE,CAAC,eAAe,CAAC,CAAC;QACpD,IAAI,iBAAiB,GAAG,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC;YAC5D,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC;QACxF,IAAI,oBAAoB,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE3D,MAAM,CAAC;YACL,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACvB,SAAS,EAAE,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;YAC1C,QAAQ,EAAE,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;YACzC,UAAU,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;SACzC,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,+CAAyB,GAAzB;QACE,MAAM,CAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAClF,CAAC;IAED;;;;;OAKG;IACH,mCAAa,GAAb,UAAc,IAAI;QAChB,iCAAiC;QACjC,mDAAmD;QACnD,IAAI;QAGJ,IAAI,MAAM,GAAG,IAAI,KAAK,CAAC;QACvB,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACtB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC/B,QAAQ,CAAC;YACX,CAAC;YACD,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YAEvB,MAAM,CAAC,IAAI,CACT,kBAAkB,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,kBAAkB,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,CAClF,CAAC;QACJ,CAAC;QAGD,2DAA2D;QAC3D,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACnD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAhEH;QAAC,iBAAU,EAAE;;mBAAA;IAiEb,kBAAC;AAAD,CAAC,AAhED,IAgEC;AAhEY,mBAAW,cAgEvB,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BonitaConfig } from './bonita-config';\nimport { Http, Response } from '@angular/http';\n\n/**\n *\n *\n * @export\n * @class BonitaUtils\n */\n@Injectable()\nexport class BonitaUtils {\n\n  /**\n   * Creates an instance of BonitaUtils.\n   *\n   * @param {BonitaConfig} bonitaConfig\n   * @param {Http} http\n   * @param {Response} resp\n   */\n  constructor(private bonitaConfig: BonitaConfig,\n    private http: Http, private resp: Response) { }\n\n  private paginateResponse(data, headersGetter) {\n    let contentRange = headersGetter()['content-range'];\n    let arrayContentRange = contentRange ? contentRange.split('/') :\n      [this.bonitaConfig.getDefaultPager().p + '-' + this.bonitaConfig.getDefaultPager().c];\n    let arrayIndexNumPerPage = arrayContentRange[0].split('-');\n\n    return {\n      items: JSON.parse(data),\n      pageIndex: Number(arrayIndexNumPerPage[0]),\n      pageSize: Number(arrayIndexNumPerPage[1]),\n      totalCount: Number(arrayContentRange[1])\n    };\n  }\n\n  /**\n   *\n   *\n   * @returns\n   */\n  transformPaginateResponse() {\n    return  [this.paginateResponse].concat(this.resp.json().body.transformResponse);\n  }\n\n  /**\n   *\n   *\n   * @param {any} data\n   * @returns\n   */\n  serializeData(data) {\n    // if (!angular.isObject(data)) {\n    //   return (data === null) ? '' : data.toString();\n    // }\n\n\n    let buffer = new Array;\n    for (var name in data) {\n      if (!data.hasOwnProperty(name)) {\n        continue;\n      }\n      let value = data[name];\n\n      buffer.push(\n        encodeURIComponent(name) + '=' + encodeURIComponent((value == null) ? '' : value)\n      );\n    }\n\n\n    // Serialize the buffer and clean it up for transportation.\n    let source = buffer.join('&').replace(/%20/g, '+');\n    return source;\n  }\n}\n"]}