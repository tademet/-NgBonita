{"version":3,"file":"archived-process-instance.service.js","sourceRoot":"","sources":["file:///F:/Develpment/AngularWorkOrder/@NgBonita/tmp/broccoli_type_script_compiler-input_base_path-jBV9tdnG.tmp/0/src/app/archived-process-instance.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BonitaConfig }   from './bonita-config';\nimport { BonitaUtils } from './bonita-utils';\nimport { Http, Response, RequestOptions, RequestMethod, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/Rx';\n\n/**\n *\n *\n * @export\n * @class ArchivedProcessInstanceService\n */\n@Injectable()\nexport class ArchivedProcessInstanceService {\n  /**\n   *\n   */\n  oHeaders = new Headers();\n\n  /**\n   * Creates an instance of ArchivedProcessInstanceService.\n   *\n   * @param {Http} http\n   * @param {BonitaConfig} bonitaConifg\n   * @param {BonitaUtils} bonitaUtils\n   */\n  constructor(private http: Http,\n    private bonitaConifg: BonitaConfig,\n    private bonitaUtils: BonitaUtils) {\n    this.oHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n  }\n\n  /**\n   *\n   *\n   * @returns\n   */\n  getStartedByCurrentUser() {\n    let options = new RequestOptions({\n      method: RequestMethod.Get,\n      url: this.bonitaConifg.getBonitaUrl + '/API/bpm/archivedCase',\n      body: this.bonitaUtils.serializeData({\n        f: ['started_by=' + this.bonitaConifg.getUserId()],\n        p: this.bonitaConifg.getDefaultPager().p,\n        c: this.bonitaConifg.getDefaultPager().c\n      }),\n      headers: this.oHeaders\n    });\n\n    return this.http.get(this.bonitaConifg.getBonitaUrl() + '/API/bpm/archivedCase', options)\n      .map(this.bonitaUtils.transformPaginateResponse)\n      .catch(this.handleError);\n  }\n\n  /**\n   *\n   *\n   * @param {number} id\n   * @returns\n   */\n  getByCaseId(id: number) {\n    let options = new RequestOptions({\n      method: RequestMethod.Get,\n      url: this.bonitaConifg.getBonitaUrl + '/API/bpm/archivedCase/:id',\n      body: this.bonitaUtils.serializeData({\n        id: id,\n        p: this.bonitaConifg.getDefaultPager().p,\n        c: this.bonitaConifg.getDefaultPager().c\n      }),\n      headers: this.oHeaders\n    });\n\n    return this.http.get(this.bonitaConifg.getBonitaUrl() + '/API/bpm/archivedCase/:id', options)\n      .map(this.bonitaUtils.transformPaginateResponse)\n      .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    let errMsg = error.status ? `${error.status} - ${error.statusText}` :\n    'Server error';\n\n    console.error(errMsg); // log to console instead\n    return Observable.throw(errMsg);\n  }\n}\n"]}